from typing import List
from pydantic import BaseModel, Field

# Vulnerability pydantic schema
class Affected(BaseModel):
    software: str = Field(description="Name of the affected software.")
    softwareVersion: str = Field(description="Version of the affected software.")
    hardware: str = Field(
        description="Name of the affected hardware in case the vulnerability affects certain devices such as routers."
    )
    hardwareVersion: str = Field(
        description="Model and version of the affected hardware, if given."
    )


class Vulnerability(BaseModel):
    vendor: str = Field(
        description="Vendor or company name of the affected devices or softwares."
    )
    affected: List[Affected] = Field(
        description="A list of all the affected products, usually software and their versions."
    )
    weakness: str = Field(
        description="Type of the vunerability (e.g. buffer overflow)."
    )
    attackerPrivileges: str = Field(
        description="Information on the privileges and type of attacker (e.g. remote/local, authenticated/unauthenticated)."
    )
    attackVector: str = Field(description="How can the vulnerability be exploited.")
    impact: str = Field(
        description="All information regarding the impact of the vulnerability."
    )
    vulnerableFunction: str = Field(
        description="The function containing the vulnerability in the source code."
    )
    vulnerablePath: str = Field(
        description="Path to the webpage containing the vulnerability, in case of a web vulnerability."
    )
    vulnerableParameters: str = Field(
        description="Request or function parameters that cause the vulnerability."
    )
    vulnerableComponent: str = Field(
        description="Components of the firmware or the operating system (OS) that is affected (e.g. web server, dns etc)."
    )
    rootCause: str = Field(
        description="Cause of the vulnerability, e.g. lack of filtering, use of strcpy etc."
    )
    remediation: str = Field(
        description="Supplementary info on fixing the vulnerability."
    )
    patchInformation: str = Field(description="Information about patch availability.")


# Vulnerability json schema
vulnerability_json_schema = {
    "type": "object",
    "properties": {
        "vendor": {"type": "string"},
        "affected": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "software": {"type": "string"},
                    "softwareVersion": {"type": "string"},
                    "hardware": {"type": "string"},
                    "hardwareVersion": {"type": "string"},
                },
            },
        },
        "weakness": {"type": "string"},
        "attackerPrivileges": {"type": "string"},
        "attackVector": {"type": "string"},
        "impact": {"type": "string"},
        "vulnerableFunction": {"type": "string"},
        "vulnerablePath": {"type": "string"},
        "vulnerableParameters": {"type": "string"},
        "vulnerableComponent": {"type": "string"},
        "rootCause": {"type": "string"},
        "remediation": {"type": "string"},
        "patchInformation": {"type": "string"},
    },
}
