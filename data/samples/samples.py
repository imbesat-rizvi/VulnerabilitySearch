import pandas as pd
import json

df = pd.read_csv("train.csv", sep=" ", header=None, names=["text", "type", "id"])
df = df.dropna()

type_mapping = {
    "0": "Other",
    "O": "Other",
    "o": "Other",
    "SN": "Software Name",
    "SV": "Software Version",
    "AV": "Attack Vector",
    "AC": "Attack Complexity",
    "PR": "Privileges Required",
    "UI": "User Interaction",
    "S": "Scope",
    "SC": "Scope",
    "CI": "Confidentiality Impact",
    "II": "Integrity Impact",
    "AI": "Availability Impact",
    "WE": "Weakness",
    "VF": "Vulnerable Function",
    "VP": "Vulnerable Path"
}


train_df = pd.DataFrame(columns=["id", "text", "json"])

for identifier, data in df.groupby("id"):
    last_read = None
    description = ""
    structured_data = {}
    
    for idx, row in data.iterrows():
        description += f" {row['text']}"
        if row["type"] == "O":
            last_read = None
            continue
    
        types = row["type"].split(",")
        
        for t in types:
            if last_read and t in last_read.split(","):
                structured_data[type_mapping[t]] += f" {row['text']}"
            else:
                if type_mapping[t] in structured_data:
                    structured_data[type_mapping[t]] += f"; {row['text']}"
                else:
                    structured_data[type_mapping[t]] = row['text']
                    
        last_read = row["type"]
            
    train_df = pd.concat([train_df, pd.DataFrame([{
        "id": identifier,
        "text": description,
        "json": json.dumps(structured_data)
    }])], ignore_index=True)
    
    
  train_df.to_csv("samples.csv")
