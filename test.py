from models import HFStrucGenLM
from config.extraction_template import Vulnerability, vulnerability_json_schema

p = "/mnt/beegfs/shared/shared_model_weights/models--llama-2-hf/7B" 

m = HFStrucGenLM(
    model=p, 
    device_map="ddp", 
    torch_dtype="bfloat16", 
    pad_token="unk_token", 
    parser="JsonSchemaParser", 
    parser_schema=Vulnerability.model_json_schema(),
)

o = m.generate(
    # batch=f'Generate a vulnerability description based on the following schema:\n{Vulnerability.model_json_schema()}',
    batch=f'Generate a vulnerability description based on the following schema:\n{vulnerability_json_schema}',
    # batch=f'Generate a vulnerability description.',
    generation_config={"max_new_tokens": 500},
)

print("JsonSchemaParser:")
print(o[0][0])


m._set_generate_fn(
    parser="json", 
    parser_schema=Vulnerability, 
    parser_cache_dir=".cache/outlines",
)

o = m.generate(
    # batch=f'Generate a vulnerability description based on the following schema:\n{Vulnerability.model_json_schema()}',
    batch=f'Generate a vulnerability description based on the following schema:\n{vulnerability_json_schema}',
    # batch=f'Generate a vulnerability description.',
)

print("Outlines:")
print(o[0][0].json())


m._set_generate_fn(
    parser="Jsonformer", 
    parser_schema=vulnerability_json_schema,
)

o = m.generate(
    batch=f'Generate a vulnerability description based on the following schema:'
)

print("Jsonformer:")
print(o[0][0])
